"""add quiz subject tables difficulty enum

Revision ID: 4bdaca1d9213
Revises: 
Create Date: 2024-06-24 01:07:52.144428

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4bdaca1d9213"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("EASY", "MEDIUM", "HARD", name="difficulty").create(op.get_bind())
    op.create_table(
        "subject",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "quiz",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("time", sa.Interval(), nullable=False),
        sa.Column(
            "difficulty",
            postgresql.ENUM("EASY", "MEDIUM", "HARD", name="difficulty", create_type=False),
            nullable=False,
        ),
        sa.Column("subject_id", sa.Uuid(), nullable=False),
        sa.Column("questions", postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False),
        sa.ForeignKeyConstraint(["subject_id"], ["subject.id"], onupdate="RESTRICT", ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("quiz")
    op.drop_table("subject")
    sa.Enum("EASY", "MEDIUM", "HARD", name="difficulty").drop(op.get_bind())
    # ### end Alembic commands ###
